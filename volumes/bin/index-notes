#!/usr/bin/env python
from __future__ import annotations

import argparse
import os


def main() -> int:
    ap = argparse.ArgumentParser(description="Index OCR/text artifacts into notes.db (scaffold)")
    ap.add_argument("--images-dir", default=os.environ.get("IMAGES_DIR", "/data/images"))
    ap.add_argument("--ocr-dir", default=os.environ.get("OCR_DIR", "/data/ocr"))
    ap.add_argument("--notes-db", default=os.environ.get("NOTES_DB", "/data/notesdb/notes.db"))
    ap.add_argument("--source", help="Optional source file path (limits indexing to one input)")
    ap.add_argument("--dry-run", action="store_true")
    args = ap.parse_args()
    print(f"[index-notes] images={args.images_dir} ocr={args.ocr_dir} db={args.notes_db} source={args.source}")
    if args.dry_run:
        print("[index-notes] Dry run; not writing to DB.")
        return 0
    print("[index-notes] Scaffold only; implement DB writes next.")
    return 0


if __name__ == "__main__":
    raise SystemExit(main())
