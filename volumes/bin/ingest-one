#!/usr/bin/env python
from __future__ import annotations

import argparse
import os
from pathlib import Path


def main() -> int:
    ap = argparse.ArgumentParser(description="Ingest a single file end-to-end (scaffold)")
    ap.add_argument("input", help="Path to a single input file")
    ap.add_argument("--images-dir", default=os.environ.get("IMAGES_DIR", "/data/images"))
    ap.add_argument("--ocr-dir", default=os.environ.get("OCR_DIR", "/data/ocr"))
    ap.add_argument("--notes-db", default=os.environ.get("NOTES_DB", "/data/notesdb/notes.db"))
    ap.add_argument("--engine", default=os.environ.get("OCR_ENGINE", "tesseract"))
    ap.add_argument("--langs", default=os.environ.get("OCR_LANGS", "eng"))
    ap.add_argument("--dry-run", action="store_true")
    args = ap.parse_args()
    kind = Path(args.input).suffix.lower()
    print(f"[ingest-one] input={args.input} engine={args.engine} langs={args.langs}")
    print("[ingest-one] Scaffold only; would call classify-doc → pdf-to-pages/ocr-image/text-to-md → index-notes.")
    if args.dry_run:
        print("[ingest-one] Dry run complete.")
    return 0


if __name__ == "__main__":
    raise SystemExit(main())
