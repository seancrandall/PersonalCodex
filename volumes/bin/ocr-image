#!/usr/bin/env python3
from __future__ import annotations

import argparse
import os


def main() -> int:
    ap = argparse.ArgumentParser(description="OCR an image or directory of images (scaffold)")
    ap.add_argument("input", help="Image path or directory")
    ap.add_argument("--outdir", default=os.environ.get("OCR_DIR", "/data/ocr"))
    ap.add_argument("--engine", default=os.environ.get("OCR_ENGINE", "tesseract"), choices=["tesseract", "paddle"])
    ap.add_argument("--langs", default=os.environ.get("OCR_LANGS", "eng"))
    ap.add_argument("--dry-run", action="store_true")
    args = ap.parse_args()
    print(f"[ocr-image] input={args.input} outdir={args.outdir} engine={args.engine} langs={args.langs}")
    if args.dry_run:
        print("[ocr-image] Dry run; not invoking OCR.")
        return 0
    print("[ocr-image] Scaffold only; integrate Tesseract/PaddleOCR next.")
    return 0


if __name__ == "__main__":
    raise SystemExit(main())

